[buildout]
index = http://packages.lizardsystem.nl
extends =
    http://packages.lizardsystem.nl/kgs/3.1.23/versions.cfg
    server.cfg
find-links =
unzip = true
socket-timeout = 2
prefer-final = true
versions = versions
extensions =
    mr.developer
    buildout-versions
parts =
    sysegg
    mkdir
    django
    omelette
    console_scripts
    pyflakes
    sphinx
    pydev
    ${buildout:serverparts}

develop = .
auto-checkout =
    lizard-security
    cassandralib
    dikedata-api
    ddsc-opendap
    rabbitmqlib
    tslib
    ddsc-site
    ddsc-core
    ddsc-logging
eggs =
    ddsc-api
# BYRMAN: keep the following list in sync with auto-checkout as a workaround:
# https://mail.python.org/pipermail/distutils-sig/2014-April/024126.html
    lizard-security
    cassandralib
    dikedata-api
    ddsc-opendap
    rabbitmqlib
    tslib
    ddsc-site
    ddsc-core
    ddsc-logging


[versions]
# Specific pins. We inherit lots of pins from the KGS, so if you add a
# development egg, you really need to un-pin it here.
ddsc-api =
Django = 1.5.4
djangorestframework = 2.3.6
sitesetup = 0.14
lizard-wms = 1.24
lizard-maptree = 1.9
raven = 3.1.4
lxml = 3.1.1
django-cors-headers = 0.06
pandas = 0.10.1
pyproj = 1.9.2
lizard-auth-client = 0.5
django-haystack = 2.0.0
mr.developer = 1.30
syseggrecipe = 1.2

# Pinning the following dependencies to the versions currently
# in use on the production server (as of 2014-04-08):

Pydap = 3.1.1
httplib2 = 0.8
pupynere = 1.0.15
Genshi = 0.7  # Pydap==3.1.1
cssselect = 0.9.1  # ddsc-site==0.1dev
django-filter = 0.7  # ddsc-site==0.1dev, dikedata-api==0.2.dev0
geopy = 0.98  # ddsc-site==0.1dev
itsdangerous = 0.23  # lizard-auth-client==0.5
pika = 0.9.13  # ddsc-logging==0.1.2.dev0, rabbitmqlib==0.5.dev0
pycassa = 1.11.0  # cassandralib==0.7.dev0
pysolr = 3.2.0  # ddsc-site==0.1dev
python-magic = 0.4.6  # ddsc-api==0.5.dev0, ddsc-core==1.1.dev0
thrift = 0.9.1  # pycassa==1.11.0
uuid = 1.30  # dikedata-api==0.2.dev0
xmltodict = 0.8.5  # tslib==0.0.5.dev0

# Reported by buildout-versions:

# Required by:
# pysolr==3.2.0
requests = 2.2.1

# Required by:
# Pydap==3.1.1
Paste = 1.7.5.1
PasteDeploy = 1.5.2
PasteScript = 1.7.5

# Required by:
# ddsc-opendap==0.1dev
pydap.responses.netcdf = 0.1.4.1

# Required by:
# lizard-wms==1.24
unicodecsv = 0.9.4


[sources]
# Sources that mr.developer can check out and add as development egg.
# If one of them is absolutely necessary, add its name to the "auto-checkout"
# in [buildout].
# Example:
# lizard-ui = git git@github.com:lizardsystem/lizard-ui.git
ddsc-site = git git@github.com:ddsc/ddsc-site
lizard-security = git git@github.com:lizardsystem/lizard-security.git branch=ddsc
dikedata-api = git git@github.com:ddsc/dikedata-api.git
ddsc-core = git git@github.com:ddsc/ddsc-core.git
cassandralib = git git@github.com:nens/cassandralib.git
rabbitmqlib = git git@github.com:nens/rabbitmqlib.git
tslib = git git@github.com:nens/tslib.git
django-rest-framework = git git@github.com:tomchristie/django-rest-framework.git
lizard-auth-client = git git@github.com:lizardsystem/lizard-auth-client.git
ddsc-logging = git git@github.com:ddsc/ddsc-logging.git
ddsc-opendap = git git@github.com:ddsc/ddsc-opendap.git


[sysegg]
# Add eggs here that are best handled through OS-level packages.
recipe = syseggrecipe
force-sysegg = true
eggs =
    psycopg2
    numpy
    matplotlib


[mkdir]
recipe = z3c.recipe.mkdir
paths =
    ${buildout:directory}/var/static
    ${buildout:directory}/var/media
    ${buildout:directory}/var/log
    ${buildout:directory}/var/sqlite
    ${buildout:directory}/var/solr
    ${buildout:directory}/var/solr/data
    ${buildout:directory}/var/solr/log
    ${buildout:directory}/var/solr/spellchecker


[serverconfig]
# Configuration for setting up gunicorn, supervisor etc.
# For the gunicorn port, check on the server in the other sites as
# there should be no overlap. And simply give the supervisor port one
# number higher.
gunicorn-port = 9000
supervisor-port = 9001
sitename = api.ddsc.nl
workers = 3


[opendapconfig]
opendap-port = 9002
workers = 3


[django]
# Sets up django for testing our application.
# See http://jacobian.org/writing/django-apps-with-buildout/
recipe = djangorecipe
wsgi = true
wsgilog = ${buildout:directory}/var/log/django.log
project = ddsc_api
projectegg = ddsc_api
settings = developmentsettings
test = ddsc_api
eggs =
    ddsc-api
    ${buildout:eggs}


[omelette]
# Creates a nice parts/omelette with our used eggs
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}


[console_scripts]
recipe = zc.recipe.egg
interpreter = python
eggs =
    ${buildout:eggs}
# Development tools
    createcoverage
    pep8
    zest.releaser
    sitesetup
    fabric
    gunicorn


[pyflakes]
# Hairy way to install pyflakes: old-style distutils script.
recipe = zc.recipe.egg
scripts =
   pyflakes
eggs =
   pyflakes
entry-points = pyflakes=pkg_resources:run_script
arguments = 'pyflakes', 'pyflakes'


[sphinx]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/doc/source
build = ${buildout:directory}/doc/build
eggs = ${buildout:eggs}


[pydev]
recipe = pb.recipes.pydev
eggs = ${buildout:eggs}
pydevproject_path = ${buildout:directory}/.pydevproject
extra_paths =
